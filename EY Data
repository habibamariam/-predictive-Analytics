import pandas as pd
import matplotlib.pyplot as plt

Stock_Market = pd.read_csv(r'D:/UDEMY COURSE/Machine Learning A-Z Template Folder/Part 2 - Regression/Section 5 - Multiple Linear Regression/2.1 AuditFeeTrainingData.csv')
df = pd.DataFrame(Stock_Market,columns=['COMPANY.ID','ASSETS',	'REVENUES','AUDIT.FEES'])
df= df.dropna()
print (df)

plt.scatter(df['ASSETS'], df['AUDIT.FEES'], color='red')
plt.title('ASSETS Vs AUDIT FEES', fontsize=14)
plt.xlabel('ASSET', fontsize=14)
plt.ylabel('AUDIT FEES', fontsize=14)
plt.grid(True)
plt.show()

plt.scatter(df['REVENUES'], df['AUDIT.FEES'], color='green')
plt.title('REVENUE VS AUDIT FEES', fontsize=14)
plt.xlabel('REVENUE', fontsize=14)
plt.ylabel('AUDIT FEES', fontsize=14)
plt.grid(True)
plt.show()


from sklearn import linear_model
import tkinter as tk 
from matplotlib.backends.backend_tkagg import FigureCanvasTkAgg


X = df[['ASSETS','REVENUES']].astype(float) # here we have 2 input variables for multiple regression. 
Y = df['AUDIT.FEES'].astype(float) # output variable (what we are trying to predict)

# with sklearn
regr = linear_model.LinearRegression()
regr.fit(X, Y)

print('Intercept: \n', regr.intercept_)
print('Coefficients: \n', regr.coef_)


# tkinter GUI
root= tk.Tk()

canvas1 = tk.Canvas(root, width = 500, height = 300)
canvas1.pack()

# with sklearn
Intercept_result = ('Intercept: ', regr.intercept_)
label_Intercept = tk.Label(root, text=Intercept_result, justify = 'center')
canvas1.create_window(260, 220, window=label_Intercept)
# with sklearn
Coefficients_result  = ('Coefficients: ', regr.coef_)
label_Coefficients = tk.Label(root, text=Coefficients_result, justify = 'center')
canvas1.create_window(260, 240, window=label_Coefficients)
label1 = tk.Label(root, text='Type ASSETS: ')
canvas1.create_window(100, 100, window=label1)
entry1 = tk.Entry (root) # create 1st entry box
canvas1.create_window(270, 100, window=entry1)
label2 = tk.Label(root, text=' Type REVENUES: ')
canvas1.create_window(120, 120, window=label2)
entry2 = tk.Entry (root) # create 2nd entry box
canvas1.create_window(270, 120, window=entry2)
def values(): 
    global New_asset #our 1st input variable
    New_asset = float(entry1.get()) 
    global New_revenue #our 2nd input variable
    New_revenue = float(entry2.get()) 
    Prediction_result  = ('PREDICTED AUDIT.FEES ', regr.predict([[New_asset ,New_revenue]]))
    label_Prediction = tk.Label(root, text= Prediction_result, bg='orange')
    canvas1.create_window(260, 280, window=label_Prediction)
    
button1 = tk.Button (root, text='Predicted audit fees',command=values, bg='orange') # button to call the 'values' command above 
canvas1.create_window(270, 150, window=button1)
 

#plot 1st scatter 
figure3 = plt.Figure(figsize=(5,4), dpi=100)
ax3 = figure3.add_subplot(111)
ax3.scatter(df['ASSETS'].astype(float),df['AUDIT.FEES'].astype(float), color = 'r')
scatter3 = FigureCanvasTkAgg(figure3, root) 
scatter3.get_tk_widget().pack(side=tk.RIGHT, fill=tk.BOTH)
ax3.legend() 
ax3.set_xlabel('ASSETS')
ax3.set_title('ASSETS VS AUDIT FEES')

#plot 2nd scatter 
figure4 = plt.Figure(figsize=(5,4), dpi=100)
ax4 = figure4.add_subplot(111)
ax4.scatter(df['REVENUES'].astype(float),df['AUDIT.FEES'].astype(float), color = 'g')
scatter4 = FigureCanvasTkAgg(figure4, root) 
scatter4.get_tk_widget().pack(side=tk.RIGHT, fill=tk.BOTH)
ax4.legend() 
ax4.set_xlabel('REVENUES')
ax4.set_title('REVENUE VS AUDIT FEES')

root.mainloop()
